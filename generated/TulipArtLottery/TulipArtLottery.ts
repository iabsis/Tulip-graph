// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get prizePeriodStart(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get prizePeriodBlocks(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tulipArt(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get rng(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class NoWinners extends ethereum.Event {
  get params(): NoWinners__Params {
    return new NoWinners__Params(this);
  }
}

export class NoWinners__Params {
  _event: NoWinners;

  constructor(event: NoWinners) {
    this._event = event;
  }
}

export class NumberOfWinnersSet extends ethereum.Event {
  get params(): NumberOfWinnersSet__Params {
    return new NumberOfWinnersSet__Params(this);
  }
}

export class NumberOfWinnersSet__Params {
  _event: NumberOfWinnersSet;

  constructor(event: NumberOfWinnersSet) {
    this._event = event;
  }

  get numberOfWinners(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PrizeLotteryAwardCancelled extends ethereum.Event {
  get params(): PrizeLotteryAwardCancelled__Params {
    return new PrizeLotteryAwardCancelled__Params(this);
  }
}

export class PrizeLotteryAwardCancelled__Params {
  _event: PrizeLotteryAwardCancelled;

  constructor(event: PrizeLotteryAwardCancelled) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get rngRequestId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get rngLockBlock(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PrizeLotteryAwardStarted extends ethereum.Event {
  get params(): PrizeLotteryAwardStarted__Params {
    return new PrizeLotteryAwardStarted__Params(this);
  }
}

export class PrizeLotteryAwardStarted__Params {
  _event: PrizeLotteryAwardStarted;

  constructor(event: PrizeLotteryAwardStarted) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get rngRequestId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get rngLockBlock(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PrizeLotteryOpened extends ethereum.Event {
  get params(): PrizeLotteryOpened__Params {
    return new PrizeLotteryOpened__Params(this);
  }
}

export class PrizeLotteryOpened__Params {
  _event: PrizeLotteryOpened;

  constructor(event: PrizeLotteryOpened) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get prizePeriodStartedAt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PrizePeriodBlocksUpdated extends ethereum.Event {
  get params(): PrizePeriodBlocksUpdated__Params {
    return new PrizePeriodBlocksUpdated__Params(this);
  }
}

export class PrizePeriodBlocksUpdated__Params {
  _event: PrizePeriodBlocksUpdated;

  constructor(event: PrizePeriodBlocksUpdated) {
    this._event = event;
  }

  get prizePeriodBlocks(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class PrizePoolAwarded extends ethereum.Event {
  get params(): PrizePoolAwarded__Params {
    return new PrizePoolAwarded__Params(this);
  }
}

export class PrizePoolAwarded__Params {
  _event: PrizePoolAwarded;

  constructor(event: PrizePoolAwarded) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get randomNumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RngRequestFailed extends ethereum.Event {
  get params(): RngRequestFailed__Params {
    return new RngRequestFailed__Params(this);
  }
}

export class RngRequestFailed__Params {
  _event: RngRequestFailed;

  constructor(event: RngRequestFailed) {
    this._event = event;
  }
}

export class RngRequestTimeoutSet extends ethereum.Event {
  get params(): RngRequestTimeoutSet__Params {
    return new RngRequestTimeoutSet__Params(this);
  }
}

export class RngRequestTimeoutSet__Params {
  _event: RngRequestTimeoutSet;

  constructor(event: RngRequestTimeoutSet) {
    this._event = event;
  }

  get rngRequestTimeout(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RngServiceUpdated extends ethereum.Event {
  get params(): RngServiceUpdated__Params {
    return new RngServiceUpdated__Params(this);
  }
}

export class RngServiceUpdated__Params {
  _event: RngServiceUpdated;

  constructor(event: RngServiceUpdated) {
    this._event = event;
  }

  get rngService(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TulipArtLottery extends ethereum.SmartContract {
  static bind(address: Address): TulipArtLottery {
    return new TulipArtLottery("TulipArtLottery", address);
  }

  calculateNextPrizePeriodStartBlock(currentBlock: BigInt): BigInt {
    let result = super.call(
      "calculateNextPrizePeriodStartBlock",
      "calculateNextPrizePeriodStartBlock(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(currentBlock)]
    );

    return result[0].toBigInt();
  }

  try_calculateNextPrizePeriodStartBlock(
    currentBlock: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateNextPrizePeriodStartBlock",
      "calculateNextPrizePeriodStartBlock(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(currentBlock)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  canCompleteAward(): boolean {
    let result = super.call(
      "canCompleteAward",
      "canCompleteAward():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_canCompleteAward(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canCompleteAward",
      "canCompleteAward():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  canStartAward(): boolean {
    let result = super.call("canStartAward", "canStartAward():(bool)", []);

    return result[0].toBoolean();
  }

  try_canStartAward(): ethereum.CallResult<boolean> {
    let result = super.tryCall("canStartAward", "canStartAward():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getLastRngLockBlock(): BigInt {
    let result = super.call(
      "getLastRngLockBlock",
      "getLastRngLockBlock():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_getLastRngLockBlock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastRngLockBlock",
      "getLastRngLockBlock():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLastRngRequestId(): BigInt {
    let result = super.call(
      "getLastRngRequestId",
      "getLastRngRequestId():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_getLastRngRequestId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastRngRequestId",
      "getLastRngRequestId():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isPrizePeriodOver(): boolean {
    let result = super.call(
      "isPrizePeriodOver",
      "isPrizePeriodOver():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isPrizePeriodOver(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPrizePeriodOver",
      "isPrizePeriodOver():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRngCompleted(): boolean {
    let result = super.call("isRngCompleted", "isRngCompleted():(bool)", []);

    return result[0].toBoolean();
  }

  try_isRngCompleted(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isRngCompleted", "isRngCompleted():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRngRequested(): boolean {
    let result = super.call("isRngRequested", "isRngRequested():(bool)", []);

    return result[0].toBoolean();
  }

  try_isRngRequested(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isRngRequested", "isRngRequested():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRngTimedOut(): boolean {
    let result = super.call("isRngTimedOut", "isRngTimedOut():(bool)", []);

    return result[0].toBoolean();
  }

  try_isRngTimedOut(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isRngTimedOut", "isRngTimedOut():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  numberOfWinners(): BigInt {
    let result = super.call(
      "numberOfWinners",
      "numberOfWinners():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberOfWinners(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberOfWinners",
      "numberOfWinners():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  prizePeriodBlocks(): BigInt {
    let result = super.call(
      "prizePeriodBlocks",
      "prizePeriodBlocks():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_prizePeriodBlocks(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "prizePeriodBlocks",
      "prizePeriodBlocks():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  prizePeriodEndAt(): BigInt {
    let result = super.call(
      "prizePeriodEndAt",
      "prizePeriodEndAt():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_prizePeriodEndAt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "prizePeriodEndAt",
      "prizePeriodEndAt():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  prizePeriodRemainingBlocks(): BigInt {
    let result = super.call(
      "prizePeriodRemainingBlocks",
      "prizePeriodRemainingBlocks():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_prizePeriodRemainingBlocks(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "prizePeriodRemainingBlocks",
      "prizePeriodRemainingBlocks():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  prizePeriodStartedAt(): BigInt {
    let result = super.call(
      "prizePeriodStartedAt",
      "prizePeriodStartedAt():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_prizePeriodStartedAt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "prizePeriodStartedAt",
      "prizePeriodStartedAt():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rng(): Address {
    let result = super.call("rng", "rng():(address)", []);

    return result[0].toAddress();
  }

  try_rng(): ethereum.CallResult<Address> {
    let result = super.tryCall("rng", "rng():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rngRequestTimeout(): BigInt {
    let result = super.call(
      "rngRequestTimeout",
      "rngRequestTimeout():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_rngRequestTimeout(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rngRequestTimeout",
      "rngRequestTimeout():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tulipArt(): Address {
    let result = super.call("tulipArt", "tulipArt():(address)", []);

    return result[0].toAddress();
  }

  try_tulipArt(): ethereum.CallResult<Address> {
    let result = super.tryCall("tulipArt", "tulipArt():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _prizePeriodStart(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _prizePeriodBlocks(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tulipArt(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _rng(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _numberOfWinners(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelAwardCall extends ethereum.Call {
  get inputs(): CancelAwardCall__Inputs {
    return new CancelAwardCall__Inputs(this);
  }

  get outputs(): CancelAwardCall__Outputs {
    return new CancelAwardCall__Outputs(this);
  }
}

export class CancelAwardCall__Inputs {
  _call: CancelAwardCall;

  constructor(call: CancelAwardCall) {
    this._call = call;
  }
}

export class CancelAwardCall__Outputs {
  _call: CancelAwardCall;

  constructor(call: CancelAwardCall) {
    this._call = call;
  }
}

export class CompleteAwardCall extends ethereum.Call {
  get inputs(): CompleteAwardCall__Inputs {
    return new CompleteAwardCall__Inputs(this);
  }

  get outputs(): CompleteAwardCall__Outputs {
    return new CompleteAwardCall__Outputs(this);
  }
}

export class CompleteAwardCall__Inputs {
  _call: CompleteAwardCall;

  constructor(call: CompleteAwardCall) {
    this._call = call;
  }
}

export class CompleteAwardCall__Outputs {
  _call: CompleteAwardCall;

  constructor(call: CompleteAwardCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _prizePeriodStart(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _prizePeriodBlocks(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tulipArt(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _rng(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetNumberOfWinnersCall extends ethereum.Call {
  get inputs(): SetNumberOfWinnersCall__Inputs {
    return new SetNumberOfWinnersCall__Inputs(this);
  }

  get outputs(): SetNumberOfWinnersCall__Outputs {
    return new SetNumberOfWinnersCall__Outputs(this);
  }
}

export class SetNumberOfWinnersCall__Inputs {
  _call: SetNumberOfWinnersCall;

  constructor(call: SetNumberOfWinnersCall) {
    this._call = call;
  }

  get _count(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetNumberOfWinnersCall__Outputs {
  _call: SetNumberOfWinnersCall;

  constructor(call: SetNumberOfWinnersCall) {
    this._call = call;
  }
}

export class SetPrizePeriodBlocksCall extends ethereum.Call {
  get inputs(): SetPrizePeriodBlocksCall__Inputs {
    return new SetPrizePeriodBlocksCall__Inputs(this);
  }

  get outputs(): SetPrizePeriodBlocksCall__Outputs {
    return new SetPrizePeriodBlocksCall__Outputs(this);
  }
}

export class SetPrizePeriodBlocksCall__Inputs {
  _call: SetPrizePeriodBlocksCall;

  constructor(call: SetPrizePeriodBlocksCall) {
    this._call = call;
  }

  get _prizePeriodBlocks(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPrizePeriodBlocksCall__Outputs {
  _call: SetPrizePeriodBlocksCall;

  constructor(call: SetPrizePeriodBlocksCall) {
    this._call = call;
  }
}

export class SetRngRequestTimeoutCall extends ethereum.Call {
  get inputs(): SetRngRequestTimeoutCall__Inputs {
    return new SetRngRequestTimeoutCall__Inputs(this);
  }

  get outputs(): SetRngRequestTimeoutCall__Outputs {
    return new SetRngRequestTimeoutCall__Outputs(this);
  }
}

export class SetRngRequestTimeoutCall__Inputs {
  _call: SetRngRequestTimeoutCall;

  constructor(call: SetRngRequestTimeoutCall) {
    this._call = call;
  }

  get _rngRequestTimeout(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRngRequestTimeoutCall__Outputs {
  _call: SetRngRequestTimeoutCall;

  constructor(call: SetRngRequestTimeoutCall) {
    this._call = call;
  }
}

export class SetRngServiceCall extends ethereum.Call {
  get inputs(): SetRngServiceCall__Inputs {
    return new SetRngServiceCall__Inputs(this);
  }

  get outputs(): SetRngServiceCall__Outputs {
    return new SetRngServiceCall__Outputs(this);
  }
}

export class SetRngServiceCall__Inputs {
  _call: SetRngServiceCall;

  constructor(call: SetRngServiceCall) {
    this._call = call;
  }

  get rngService(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRngServiceCall__Outputs {
  _call: SetRngServiceCall;

  constructor(call: SetRngServiceCall) {
    this._call = call;
  }
}

export class StartAwardCall extends ethereum.Call {
  get inputs(): StartAwardCall__Inputs {
    return new StartAwardCall__Inputs(this);
  }

  get outputs(): StartAwardCall__Outputs {
    return new StartAwardCall__Outputs(this);
  }
}

export class StartAwardCall__Inputs {
  _call: StartAwardCall;

  constructor(call: StartAwardCall) {
    this._call = call;
  }
}

export class StartAwardCall__Outputs {
  _call: StartAwardCall;

  constructor(call: StartAwardCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
